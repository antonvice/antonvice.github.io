---
import { ViewTransitions } from 'astro:transitions';
import LetterGlitch from '../components/LetterGlitch';
import PillNav from '../components/PillNav';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Anton Vice - AI Whisperer, ML Engineer & CTO" } = Astro.props;
const currentPath = Astro.url.pathname;

// Navigation items for PillNav
const navItems = [
  { label: 'Home', href: '/' },
  { label: 'Projects', href: '/projects' },
  { label: 'Blog', href: '/blog' }
];

// Social links with SVG icons
const socialLinks = [
  { 
    label: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline></svg>',
    href: 'mailto:anton96vice@gmail.com', 
    ariaLabel: 'Email' 
  },
  { 
    label: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor"><path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/></svg>',
    href: 'https://x.com/la_haine_d_arte', 
    ariaLabel: 'Twitter/X' 
  },
  { 
    label: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor"><path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/></svg>',
    href: 'https://www.linkedin.com/in/antonvice', 
    ariaLabel: 'LinkedIn' 
  },
  { 
    label: '<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="currentColor"><path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/></svg>',
    href: 'https://github.com/antonvice', 
    ariaLabel: 'GitHub' 
  }
];
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    
    <title>{title}</title>
    <ViewTransitions />
    
    <style>
      /* Reading progress bar */
      .progress-bar {
        position: fixed;
        top: 0;
        left: 0;
        width: 0;
        height: 3px;
        background: linear-gradient(90deg, #2be4ea, #fed33f, #e8615a);
        box-shadow: 0 0 12px rgba(46, 228, 234, 0.7);
        z-index: 10001; /* Higher than navigation (9999) */
        transition: width 0.1s linear, opacity 0.3s ease;
        opacity: 0;
        pointer-events: none;
      }
      
      .progress-bar.visible {
        opacity: 1;
      }
      
      
      /* Page transition animations */
      .page-transition {
        opacity: 1;
        transform: translateY(0);
        transition: opacity 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94), 
                    transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      }
      
      .page-transition.fade-out {
        opacity: 0;
        transform: translateY(-20px);
      }
      
      .page-transition.fade-in {
        opacity: 1;
        transform: translateY(0);
      }
    </style>
  </head>
  <body class="min-h-screen text-gray-100 bg-dark bg-gradient-to-br from-gray-900 via-dark to-gray-800 antialiased" style="overflow-x: hidden !important; max-width: 100vw !important;">
    <!-- Matrix Background Layer (z-0) - Persisted across page transitions -->
    <div class="fixed inset-0 z-0" id="matrix-background-wrapper" transition:persist>
      <LetterGlitch client:load />
    </div>
    
    <!-- Gradient overlays (z-10) -->
    <div class="fixed inset-0 pointer-events-none z-10">
      <div class="absolute top-0 left-0 w-96 h-96 bg-neon-blue/10 rounded-full filter blur-3xl"></div>
      <div class="absolute bottom-0 right-0 w-96 h-96 bg-electric-blue/10 rounded-full filter blur-3xl"></div>
    </div>
    
    <!-- Navigation (z-9999) -->
    <div class="fixed top-4 left-0 right-0 z-[9999]">
      <PillNav 
        client:load 
        items={navItems}
        socialLinks={socialLinks}
        currentPath={currentPath} 
        initialLoadAnimation={false}
      />
    </div>
    
    <!-- Reading progress bar (z-10001 - above navigation) -->
    <div class="progress-bar" id="progress-bar"></div>
    
    <!-- Main content wrapper to prevent horizontal overflow -->
    <div class="w-full max-w-full overflow-x-hidden">
      <!-- Page transition wrapper (z-20) -->
      <div id="page-content" class="page-transition relative z-20 w-full max-w-full overflow-x-hidden">
        <slot />
      </div>
    </div>
    
    <script>
      // Import and initialize glass effect
      import { initGlassEffect } from '../scripts/glass-effect';
      
      // Initialize glass effect on page load and navigation
      document.addEventListener('DOMContentLoaded', initGlassEffect);
      document.addEventListener('astro:page-load', initGlassEffect);
      
      /**
       * Reading progress bar functionality
       * Updates based on scroll position and persists through View Transitions
       */
      function updateProgressBar() {
        const progressBar = document.getElementById('progress-bar');
        if (!progressBar) return;
        
        // Use documentElement for more accurate measurements
        const scrollTop = document.documentElement.scrollTop || window.scrollY;
        const docHeight = document.documentElement.scrollHeight - window.innerHeight;
        const scrollPercent = docHeight > 0 ? Math.min(Math.max((scrollTop / docHeight) * 100, 0), 100) : 0;
        
        progressBar.style.width = scrollPercent + '%';
        
        // Show progress bar when scrolling
        if (scrollTop > 5) {
          progressBar.classList.add('visible');
        } else {
          progressBar.classList.remove('visible');
          progressBar.style.width = '0';
        }
      }
      
      // Throttled scroll listener
      let ticking = false;
      
      function onScroll() {
        if (!ticking) {
          requestAnimationFrame(() => {
            updateProgressBar();
            ticking = false;
          });
          ticking = true;
        }
      }
      
      // Initialize scroll listeners
      function initScrollListeners() {
        window.removeEventListener('scroll', onScroll); // Remove existing listener if any
        window.addEventListener('scroll', onScroll, { passive: true });
        updateProgressBar(); // Initial update
      }
      
      // Initialize on page load
      window.addEventListener('load', initScrollListeners);
      
      // Re-initialize on navigation for View Transitions
      document.addEventListener('astro:after-swap', () => {
        initScrollListeners();
        updateProgressBar();
      });
      
      // Update immediately after page load
      document.addEventListener('astro:page-load', updateProgressBar);
      
      // Handle View Transitions animations
      document.addEventListener('astro:before-preparation', () => {
        // Optionally fade out the progress bar before transition
        const progressBar = document.getElementById('progress-bar');
        if (progressBar) {
          progressBar.style.transition = 'opacity 0.2s ease';
          progressBar.style.opacity = '0';
        }
      });
      
      document.addEventListener('astro:after-swap', () => {
        // Restore progress bar after transition
        const progressBar = document.getElementById('progress-bar');
        if (progressBar) {
          setTimeout(() => {
            progressBar.style.opacity = '1';
            updateProgressBar();
          }, 100);
        }
      });
    </script>
  </body>
</html>

<style is:global>
  @import '../styles/global.css';
</style>